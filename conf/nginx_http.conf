#user  nobody;
worker_processes  1;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';
    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;
    #keepalive_timeout  0;
    keepalive_timeout  65;
    gzip  on;

    upstream backend {
        # Specify backend service location for reverse proxy
        server localhost:9000;
    }

    server {
        listen       80;
        server_name  localhost;
        charset utf-8;

        # PageSpeed module configuration
        # Docs: https://www.modpagespeed.com/doc/configuration
        # Enable: pagespeed on;
        # Standby mode: pagespeed standby;
        # Disable: pagespeed unplugged;
        pagespeed on;

        # Needs to exist and be writable by nginx.  Use tmpfs for best performance.
        pagespeed FileCachePath /var/ngx_pagespeed_cache;

        # Ensure requests for pagespeed optimized resources go to the pagespeed handler
        # and no extraneous headers get set.
        location ~ "\.pagespeed\.([a-z]\.)?[a-z]{2}\.[^.]{10}\.[^.]+" {
            add_header "" "";
        }
        location ~ "^/pagespeed_static/" { }
        location ~ "^/ngx_pagespeed_beacon$" { }

        # PageSpeed Performance Filters
        # Docs: https://www.modpagespeed.com/doc

        # Must be set to enable external resource
        # filters like defer_javascript and lazyload_images
        #pagespeed StaticAssetPrefix /custom/static/;

        ## HTML
        #pagespeed EnableFilters add_head;
        #pagespeed LowercaseHtmlNames on;
        #pagespeed EnableFilters remove_comments;
        #pagespeed EnableFilters remove_quotes;
        #pagespeed EnableFilters collapse_whitespace;
        #pagespeed EnableFilters convert_meta_tags;
        #pagespeed EnableFilters trim_urls;

        ## CSS
        #pagespeed EnableFilters rewrite_css;
        #pagespeed EnableFilters combine_css;
        #pagespeed EnableFilters fallback_rewrite_css_urls;
        #pagespeed EnableFilters prioritize_critical_css;
        #pagespeed EnableFilters move_css_above_scripts;

        ## JavaScript
        #pagespeed EnableFilters rewrite_javascript;
        #pagespeed EnableFilters defer_javascript;
        #pagespeed EnableFilters canonicalize_javascript_libraries;

        ## Images
        #pagespeed EnableFilters dedup_inlined_images;
        #pagespeed EnableFilters responsive_images,resize_images;
        #pagespeed EnableFilters responsive_images_zoom;
        #pagespeed EnableFilters inline_preview_images;
        #pagespeed EnableFilters resize_mobile_images;
        #pagespeed EnableFilters lazyload_images;
        #pagespeed EnableFilters rewrite_css,sprite_images;

        ## DNS
        #pagespeed EnableFilters insert_dns_prefetch;

        ## Cache
        #pagespeed EnableFilters extend_cache;

        ## Google Analytics
        #pagespeed EnableFilters make_google_analytics_async;

        ## Google Fonts
        #pagespeed EnableFilters inline_google_font_css;

        location / {
            # Static files directory
            root html;

            # Serve static files and directories from the root
            # Fallback to the backend service when it does not exist
            try_files $uri $uri/ @backend;
        }

        location @backend {
            proxy_redirect off;
            proxy_http_version 1.1;
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        #error_page  404              /404.html;
        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
}
